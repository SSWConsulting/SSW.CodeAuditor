name: "Deploy UI"

on:
  workflow_call:
    inputs:
      environment:
        description: "Name of the environment to deploy"
        required: true
        type: string

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: pwsh

jobs:
  deploy-ui:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - name: Install Firebase-tools
        run: npm i firebase-tools -g

      - name: Create env file for Svelte UI
        run: |
          cd ui
          New-Item -Path .env -ItemType File -Force
          Add-Content -Path .env -Value "API=${{ vars.API }}"
          Add-Content -Path .env -Value "API2=${{ vars.API2 }}"
          Add-Content -Path .env -Value "DEPLOYMENTS_URL=${{ vars.DEPLOYMENTS_URL }}"
          Add-Content -Path .env -Value "MAX_SCAN_SIZE=${{ vars.MAX_SCAN_SIZE }}" 

      - name: Deploy Svelte UI to Firebase
        env:
          GOOGLE_APPLICATION_CREDENTIALS: service-account-key.json
        run: |
          cd ui
          # Create service account key file
          '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' | Out-File -FilePath service-account-key.json -Encoding utf8
          firebase use ${{ vars.FIREBASE_PROJECT }}
          firebase projects:list
          npm i
          npm run build
          firebase deploy --only hosting
          # Clean up service account key file
          Remove-Item service-account-key.json
