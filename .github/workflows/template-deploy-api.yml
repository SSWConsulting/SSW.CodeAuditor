name: "Deploy API"

on:
  workflow_call:
    inputs:
      environment:
        description: "Name of the environment to deploy"
        required: true
        type: string

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: pwsh

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - name: Install Firebase-tools
        run: npm i firebase-tools -g

      - name: Create env file for NodeJS app
        run: |
          cd api/functions
          touch .env
          echo AZURE_STORAGE_ACCOUNT=${{ secrets.AZURE_STORAGE_ACCOUNT }} >> .env
          echo AZURE_STORAGE_ACCESS_KEY=${{ secrets.AZURE_STORAGE_ACCESS_KEY }} >> .env 
          echo WORKFLOW_ACCESS_TOKEN=${{ secrets.WORKFLOW_ACCESS_TOKEN }} >> .env
          echo MAX_SCAN_SIZE=${{ vars.MAX_SCAN_SIZE }} >> .env 

      - name: Deploy API to Firebase
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        run: |
          cd api/functions
          # Create service account key file
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > service-account-key.json
          export GOOGLE_APPLICATION_CREDENTIALS="service-account-key.json"
          firebase use ${{ vars.FIREBASE_PROJECT }}
          firebase projects:list
          npm i
          firebase deploy --only functions
          # Clean up service account key file
          rm service-account-key.json 
